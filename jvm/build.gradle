buildscript {
    ext.kotlin_version = '1.2.0'

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.1"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin-platform-jvm'
apply plugin: 'com.github.johnrengelman.shadow'

group 'me.kgustave'
version '0.1'

sourceCompatibility = 1.8
archivesBaseName = moduleID as String

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    expectedBy project(":core")

    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compileOnly "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compileOnly 'org.json:json:20170516'

    testCompile 'junit:junit:4.12'
    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    test.kotlin.srcDirs += 'src/test/kotlin'

    test.compileClasspath += main.compileClasspath
    test.runtimeClasspath += main.runtimeClasspath
}

jar {
    classifier = ""
    manifest {
        attributes 'Implementation-Version': "$version"
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from "$buildDir/sources"
}

task sources(type: Copy) {
    from 'src/main/kotlin'
    into "$buildDir/sources"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

dokkaJavadoc {
    moduleName = moduleID as String
}

shadowJar {
    classifier = "withDependencies"
}

build {
    dependsOn clean
    dependsOn jar
    dependsOn javadocJar
    dependsOn sourcesJar
    dependsOn shadowJar

    jar.mustRunAfter clean
    javadocJar.mustRunAfter jar
    sourcesJar.mustRunAfter javadocJar
    shadowJar.mustRunAfter sourcesJar
}